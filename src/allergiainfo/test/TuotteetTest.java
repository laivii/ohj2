package allergiainfo.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import allergiainfo.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.04.21 21:21:39 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TuotteetTest {



  // Generated by ComTest BEGIN
  /** testLisaa38 */
  @Test
  public void testLisaa38() {    // Tuotteet: 38
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t = new Tuote(); 
    Tuote t2 = new Tuote(); 
    assertEquals("From: Tuotteet line: 44", 0, tuotteet.haeLkm()); 
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 46", 1, tuotteet.haeLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 47", 2, tuotteet.haeLkm()); 
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 48", 3, tuotteet.haeLkm()); 
    assertEquals("From: Tuotteet line: 50", t, tuotteet.anna(0)); 
    assertEquals("From: Tuotteet line: 51", t2, tuotteet.anna(1)); 
    assertEquals("From: Tuotteet line: 52", t, tuotteet.anna(2)); 
    assertEquals("From: Tuotteet line: 53", false, tuotteet.anna(1) == t); 
    assertEquals("From: Tuotteet line: 54", true, tuotteet.anna(1) == t2); 
    try {
    assertEquals("From: Tuotteet line: 55", t, tuotteet.anna(3)); 
    fail("Tuotteet: 55 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 57", 4, tuotteet.haeLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 58", 5, tuotteet.haeLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaViimeinen80 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaViimeinen80() throws SailoException {    // Tuotteet: 80
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t1 = new Tuote(); 
    Tuote t2 = new Tuote(); 
    Tuote t3 = new Tuote(); 
    t1.rekisteroi(); assertEquals("From: Tuotteet line: 87", 1, t1.haeId()); 
    t2.rekisteroi(); assertEquals("From: Tuotteet line: 88", 2, t2.haeId()); 
    t3.rekisteroi(); assertEquals("From: Tuotteet line: 89", 3, t3.haeId()); 
    tuotteet.lisaa(t1); assertEquals("From: Tuotteet line: 91", 1, tuotteet.haeLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 92", 2, tuotteet.haeLkm()); 
    tuotteet.lisaa(t3); assertEquals("From: Tuotteet line: 93", 3, tuotteet.haeLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 95", 2, tuotteet.haeLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 96", 1, tuotteet.haeLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 97", 0, tuotteet.haeLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 98", 0, tuotteet.haeLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaTietty119 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaTietty119() throws SailoException {    // Tuotteet: 119
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t1 = new Tuote(); 
    Tuote t2 = new Tuote(); 
    Tuote t3 = new Tuote(); 
    t1.rekisteroi(); assertEquals("From: Tuotteet line: 126", 7, t1.haeId()); 
    t2.rekisteroi(); assertEquals("From: Tuotteet line: 127", 8, t2.haeId()); 
    t3.rekisteroi(); assertEquals("From: Tuotteet line: 128", 9, t3.haeId()); 
    tuotteet.lisaa(t1); assertEquals("From: Tuotteet line: 130", 1, tuotteet.haeLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 131", 2, tuotteet.haeLkm()); 
    tuotteet.lisaa(t3); assertEquals("From: Tuotteet line: 132", 3, tuotteet.haeLkm()); 
    tuotteet.poistaTietty(7); assertEquals("From: Tuotteet line: 134", 2, tuotteet.haeLkm()); 
    tuotteet.poistaTietty(99); assertEquals("From: Tuotteet line: 135", 2, tuotteet.haeLkm()); 
    tuotteet.poistaTietty(8); assertEquals("From: Tuotteet line: 136", 1, tuotteet.haeLkm()); 
    tuotteet.poistaTietty(9); assertEquals("From: Tuotteet line: 137", 0, tuotteet.haeLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHaeTuoteIdlla173 
   * @throws SailoException when error
   */
  @Test
  public void testHaeTuoteIdlla173() throws SailoException {    // Tuotteet: 173
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t1 = new Tuote(); 
    Tuote t2 = new Tuote(); 
    Tuote t3 = new Tuote(); 
    t1.rekisteroi(); assertEquals("From: Tuotteet line: 181", 4, t1.haeId()); 
    t2.rekisteroi(); assertEquals("From: Tuotteet line: 182", 5, t2.haeId()); 
    t3.rekisteroi(); assertEquals("From: Tuotteet line: 183", 6, t3.haeId()); 
    tuotteet.lisaa(t1); 
    tuotteet.lisaa(t2); 
    tuotteet.lisaa(t3); 
    assertEquals("From: Tuotteet line: 189", t1, tuotteet.haeTuoteIdlla(4)); 
    assertEquals("From: Tuotteet line: 190", t3, tuotteet.haeTuoteIdlla(6)); 
    assertEquals("From: Tuotteet line: 191", t2, tuotteet.haeTuoteIdlla(5)); 
    try {
    tuotteet.haeTuoteIdlla(55); 
    fail("Tuotteet: 192 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}