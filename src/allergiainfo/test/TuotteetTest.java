package allergiainfo.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import allergiainfo.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.03.06 11:31:00 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TuotteetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa35 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa35() throws SailoException {    // Tuotteet: 35
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t = new Tuote(); 
    Tuote t2 = new Tuote(); 
    assertEquals("From: Tuotteet line: 40", 0, tuotteet.getLkm()); 
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 41", 1, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 42", 2, tuotteet.getLkm()); 
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 43", 3, tuotteet.getLkm()); 
    assertEquals("From: Tuotteet line: 44", t, tuotteet.anna(0)); 
    assertEquals("From: Tuotteet line: 45", t2, tuotteet.anna(1)); 
    assertEquals("From: Tuotteet line: 46", t, tuotteet.anna(2)); 
    assertEquals("From: Tuotteet line: 47", false, tuotteet.anna(1) == t); 
    assertEquals("From: Tuotteet line: 48", true, tuotteet.anna(1) == t2); 
    try {
    assertEquals("From: Tuotteet line: 49", t, tuotteet.anna(3)); 
    fail("Tuotteet: 49 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 50", 4, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 51", 5, tuotteet.getLkm()); 
    try {
    tuotteet.lisaa(t); 
    fail("Tuotteet: 52 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaViimeinen65 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaViimeinen65() throws SailoException {    // Tuotteet: 65
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t1 = new Tuote(); 
    Tuote t2 = new Tuote(); 
    Tuote t3 = new Tuote(); 
    t1.rekisteroi(); assertEquals("From: Tuotteet line: 72", 1, t1.getId()); 
    t2.rekisteroi(); assertEquals("From: Tuotteet line: 73", 2, t2.getId()); 
    t3.rekisteroi(); assertEquals("From: Tuotteet line: 74", 3, t3.getId()); 
    tuotteet.lisaa(t1); assertEquals("From: Tuotteet line: 76", 1, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 77", 2, tuotteet.getLkm()); 
    tuotteet.lisaa(t3); assertEquals("From: Tuotteet line: 78", 3, tuotteet.getLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 80", 2, tuotteet.getLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 81", 1, tuotteet.getLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 82", 0, tuotteet.getLkm()); 
    tuotteet.poistaViimeinen(); assertEquals("From: Tuotteet line: 83", 0, tuotteet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaTietty104 
   * @throws SailoException when error
   */
  @Test
  public void testPoistaTietty104() throws SailoException {    // Tuotteet: 104
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t1 = new Tuote(); 
    Tuote t2 = new Tuote(); 
    Tuote t3 = new Tuote(); 
    t1.rekisteroi(); assertEquals("From: Tuotteet line: 111", 4, t1.getId()); 
    t2.rekisteroi(); assertEquals("From: Tuotteet line: 112", 5, t2.getId()); 
    t3.rekisteroi(); assertEquals("From: Tuotteet line: 113", 6, t3.getId()); 
    tuotteet.lisaa(t1); assertEquals("From: Tuotteet line: 115", 1, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 116", 2, tuotteet.getLkm()); 
    tuotteet.lisaa(t3); assertEquals("From: Tuotteet line: 117", 3, tuotteet.getLkm()); 
    tuotteet.poistaTietty(4); assertEquals("From: Tuotteet line: 119", 2, tuotteet.getLkm()); 
    tuotteet.poistaTietty(7); assertEquals("From: Tuotteet line: 120", 2, tuotteet.getLkm()); 
    tuotteet.poistaTietty(5); assertEquals("From: Tuotteet line: 121", 1, tuotteet.getLkm()); 
    tuotteet.poistaTietty(6); assertEquals("From: Tuotteet line: 122", 0, tuotteet.getLkm()); 
  } // Generated by ComTest END
}