package allergiainfo.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import allergiainfo.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.02.26 13:42:57 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TuotteetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa34 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa34() throws SailoException {    // Tuotteet: 34
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t = new Tuote(); 
    Tuote t2 = new Tuote(); 
    assertEquals("From: Tuotteet line: 39", 0, tuotteet.getLkm()); 
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 40", 1, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 41", 2, tuotteet.getLkm()); 
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 42", 3, tuotteet.getLkm()); 
    assertEquals("From: Tuotteet line: 43", t, tuotteet.anna(0)); 
    assertEquals("From: Tuotteet line: 44", t2, tuotteet.anna(1)); 
    assertEquals("From: Tuotteet line: 45", t, tuotteet.anna(2)); 
    assertEquals("From: Tuotteet line: 46", false, tuotteet.anna(1) == t); 
    assertEquals("From: Tuotteet line: 47", true, tuotteet.anna(1) == t2); 
    try {
    assertEquals("From: Tuotteet line: 48", t, tuotteet.anna(3)); 
    fail("Tuotteet: 48 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    tuotteet.lisaa(t); assertEquals("From: Tuotteet line: 49", 4, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 50", 5, tuotteet.getLkm()); 
    try {
    tuotteet.lisaa(t); 
    fail("Tuotteet: 51 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista66 
   * @throws SailoException when error
   */
  @Test
  public void testPoista66() throws SailoException {    // Tuotteet: 66
    Tuotteet tuotteet = new Tuotteet(); 
    Tuote t1 = new Tuote(); 
    Tuote t2 = new Tuote(); 
    Tuote t3 = new Tuote(); 
    t1.rekisteroi(); assertEquals("From: Tuotteet line: 73", 1, t1.getId()); 
    t2.rekisteroi(); assertEquals("From: Tuotteet line: 74", 1, t1.getId()); 
    t3.rekisteroi(); assertEquals("From: Tuotteet line: 75", 1, t1.getId()); 
    tuotteet.lisaa(t1); assertEquals("From: Tuotteet line: 77", 1, tuotteet.getLkm()); 
    tuotteet.lisaa(t2); assertEquals("From: Tuotteet line: 78", 2, tuotteet.getLkm()); 
    tuotteet.lisaa(t3); assertEquals("From: Tuotteet line: 79", 3, tuotteet.getLkm()); 
    tuotteet.poista(1); assertEquals("From: Tuotteet line: 81", 2, tuotteet.getLkm()); 
    tuotteet.poista(4); assertEquals("From: Tuotteet line: 82", 2, tuotteet.getLkm()); 
    tuotteet.poista(2); assertEquals("From: Tuotteet line: 83", 1, tuotteet.getLkm()); 
    tuotteet.poista(3); assertEquals("From: Tuotteet line: 84", 0, tuotteet.getLkm()); 
  } // Generated by ComTest END
}